##### Enumarations

enum UserStatus {
  EXPIRED
  GENERAL
  SUBSCRIBER
  TRIAL
}

enum Category {
  EAT
  FOCUS
  MOVE
  SLEEP
}

##### Inputs

input AddressInput {
  country: String
  locality: String
  postalCode: String
  region: String
  street: [String]!
}

input ProfileInput {
  address: AddressInput
  email: String
  title: String
  website: String
}

input S3ObjectInput {
  bucket: String!
  key: String!
  localUri: String
  mimeType: String!
  region: String!
}

##### Types

type Address @aws_cognito_user_pools @aws_api_key {
  country: String
  locality: String
  postalCode: String
  region: String
  street: [String]
}

type Habit {
  category: Category!
  createdAt: String!
  deletedAt: String
  description: String!
  enableWeekends: Boolean
  id: String!
  place: String
  sort: String!
  tasks: [Task]
  time: String!
  trigger: String
  updatedAt: String!
  user: User!
  why: String
}

type Mutation {
  deleteUser: User
  updateUser(
    avatar: S3ObjectInput
    email: String
    name: String
    profile: ProfileInput
  ): User!
}

type Profile @aws_cognito_user_pools @aws_api_key {
  address: Address
  phone: String
  title: String
  website: String
  # TODO: add Social Media
}

type S3Object @aws_cognito_user_pools @aws_api_key {
  bucket: String!
  key: String!
  region: String!
  mimeType: String!
}

type User {
  avatar: S3Object @aws_cognito_user_pools @aws_api_key
  createdAt: String!
  email: String!
  expiresAt: String
  habits: [Habit]
  id: ID! @aws_cognito_user_pools @aws_api_key
  name: String @aws_cognito_user_pools @aws_api_key
  profile: Profile @aws_cognito_user_pools @aws_api_key
  role: String!
  status: UserStatus!
  tasks: [Task]
  updatedAt: String!
  welcomeSentAt: String
}

type Task {
  completionDate: String
  completed: Boolean
  createdAt: String!
  difficulty: Int
  habit: Habit!
  rating: Int
  updatedAt: String!
  version: String
}

type Query {
  getUser: User!
  getUsers: [User!]!
  getHabit(id: ID!): Habit
  getHabits(userId: ID): [Habit!]!
  getTask(id: ID!): Task
  getTasks(habitId: ID): [Task!]!
}

##### Schema

schema {
  query: Query
  mutation: Mutation
}
